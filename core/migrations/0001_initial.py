# Generated by Django 5.1.7 on 2025-03-24 07:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=2, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('first_name', models.CharField(max_length=20, verbose_name='Ime')),
                ('last_name', models.CharField(max_length=20, verbose_name='Prezime')),
                ('role', models.CharField(choices=[('staff', 'Osoblje'), ('admin', 'Administrator'), ('superuser', 'Superuser')], default='staff', max_length=20, verbose_name='Uloga')),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupe kojima korisnik pripada. Korisnik preuzima sve dozvole iz grupa.', related_name='ims_user_set', related_query_name='user', to='auth.group', verbose_name='Grupe')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specifiƒçne dozvole za ovog korisnika.', related_name='ims_user_set', related_query_name='user', to='auth.permission', verbose_name='Dozvole korisnika')),
                ('laboratory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='core.laboratory', verbose_name='Laboratorija')),
                ('laboratory_permissions', models.ManyToManyField(related_name='authorized_users', to='core.laboratory', verbose_name='Dozvole za laboratorije')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='core.center')),
            ],
        ),
        migrations.AddField(
            model_name='laboratory',
            name='organizational_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratories', to='core.organizationalunit'),
        ),
    ]
